//
// Copyright 2019 AT&T Intellectual Property
// Copyright 2019 Nokia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// This source code is part of the near-RT RIC (RAN Intelligent Controller)
// platform project (RICP).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: ran_function.proto

package entities

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RanParameterType int32

const (
	RanParameterType_UNKNOWN_RAN_PARAMETER_TYPE RanParameterType = 0
	RanParameterType_INTEGER                    RanParameterType = 1
	RanParameterType_ENUMERATED                 RanParameterType = 2
	RanParameterType_BOOLEAN                    RanParameterType = 3
	RanParameterType_BIT_STRING                 RanParameterType = 4
	RanParameterType_OCTET_STRING               RanParameterType = 5
	RanParameterType_PRINTABLE_STRING           RanParameterType = 6
)

// Enum value maps for RanParameterType.
var (
	RanParameterType_name = map[int32]string{
		0: "UNKNOWN_RAN_PARAMETER_TYPE",
		1: "INTEGER",
		2: "ENUMERATED",
		3: "BOOLEAN",
		4: "BIT_STRING",
		5: "OCTET_STRING",
		6: "PRINTABLE_STRING",
	}
	RanParameterType_value = map[string]int32{
		"UNKNOWN_RAN_PARAMETER_TYPE": 0,
		"INTEGER":                    1,
		"ENUMERATED":                 2,
		"BOOLEAN":                    3,
		"BIT_STRING":                 4,
		"OCTET_STRING":               5,
		"PRINTABLE_STRING":           6,
	}
)

func (x RanParameterType) Enum() *RanParameterType {
	p := new(RanParameterType)
	*p = x
	return p
}

func (x RanParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RanParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_ran_function_proto_enumTypes[0].Descriptor()
}

func (RanParameterType) Type() protoreflect.EnumType {
	return &file_ran_function_proto_enumTypes[0]
}

func (x RanParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RanParameterType.Descriptor instead.
func (RanParameterType) EnumDescriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{0}
}

type RanFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionId         uint32                 `protobuf:"varint,1,opt,name=ran_function_id,json=ranFunctionId,proto3" json:"ran_function_id"`
	RanFunctionDefinition *RanFunctionDefinition `protobuf:"bytes,2,opt,name=ran_function_definition,json=ranFunctionDefinition,proto3" json:"ran_function_definition,omitempty"`
	RanFunctionRevision   uint32                 `protobuf:"varint,3,opt,name=ran_function_revision,json=ranFunctionRevision,proto3" json:"ran_function_revision"`
}

func (x *RanFunction) Reset() {
	*x = RanFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanFunction) ProtoMessage() {}

func (x *RanFunction) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanFunction.ProtoReflect.Descriptor instead.
func (*RanFunction) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{0}
}

func (x *RanFunction) GetRanFunctionId() uint32 {
	if x != nil {
		return x.RanFunctionId
	}
	return 0
}

func (x *RanFunction) GetRanFunctionDefinition() *RanFunctionDefinition {
	if x != nil {
		return x.RanFunctionDefinition
	}
	return nil
}

func (x *RanFunction) GetRanFunctionRevision() uint32 {
	if x != nil {
		return x.RanFunctionRevision
	}
	return 0
}

type RanFunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2SmGnbNrtRanFunctionDefinition *E2SmGnbNrtRanFunctionDefinition `protobuf:"bytes,1,opt,name=e2sm_gnb_nrt_ran_function_definition,json=e2smGnbNrtRanFunctionDefinition,proto3" json:"e2sm_gnb_nrt_ran_function_definition,omitempty"`
}

func (x *RanFunctionDefinition) Reset() {
	*x = RanFunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanFunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanFunctionDefinition) ProtoMessage() {}

func (x *RanFunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanFunctionDefinition.ProtoReflect.Descriptor instead.
func (*RanFunctionDefinition) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{1}
}

func (x *RanFunctionDefinition) GetE2SmGnbNrtRanFunctionDefinition() *E2SmGnbNrtRanFunctionDefinition {
	if x != nil {
		return x.E2SmGnbNrtRanFunctionDefinition
	}
	return nil
}

type E2SmGnbNrtRanFunctionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionName       *RanFunctionName        `protobuf:"bytes,1,opt,name=ran_function_name,json=ranFunctionName,proto3" json:"ran_function_name,omitempty"`
	RicEventTriggerStyles []*RicEventTriggerStyle `protobuf:"bytes,2,rep,name=ric_event_trigger_styles,json=ricEventTriggerStyles,proto3" json:"ric_event_trigger_styles,omitempty"`
	RicReportStyles       []*RicReportStyle       `protobuf:"bytes,3,rep,name=ric_report_styles,json=ricReportStyles,proto3" json:"ric_report_styles,omitempty"`
	RicInsertStyles       []*RicInsertStyle       `protobuf:"bytes,4,rep,name=ric_insert_styles,json=ricInsertStyles,proto3" json:"ric_insert_styles,omitempty"`
	RicControlStyles      []*RicControlStyle      `protobuf:"bytes,5,rep,name=ric_control_styles,json=ricControlStyles,proto3" json:"ric_control_styles,omitempty"`
	RicPolicyStyles       []*RicPolicyStyle       `protobuf:"bytes,6,rep,name=ric_policy_styles,json=ricPolicyStyles,proto3" json:"ric_policy_styles,omitempty"`
}

func (x *E2SmGnbNrtRanFunctionDefinition) Reset() {
	*x = E2SmGnbNrtRanFunctionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmGnbNrtRanFunctionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmGnbNrtRanFunctionDefinition) ProtoMessage() {}

func (x *E2SmGnbNrtRanFunctionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmGnbNrtRanFunctionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmGnbNrtRanFunctionDefinition) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{2}
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRanFunctionName() *RanFunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRicEventTriggerStyles() []*RicEventTriggerStyle {
	if x != nil {
		return x.RicEventTriggerStyles
	}
	return nil
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRicReportStyles() []*RicReportStyle {
	if x != nil {
		return x.RicReportStyles
	}
	return nil
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRicInsertStyles() []*RicInsertStyle {
	if x != nil {
		return x.RicInsertStyles
	}
	return nil
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRicControlStyles() []*RicControlStyle {
	if x != nil {
		return x.RicControlStyles
	}
	return nil
}

func (x *E2SmGnbNrtRanFunctionDefinition) GetRicPolicyStyles() []*RicPolicyStyle {
	if x != nil {
		return x.RicPolicyStyles
	}
	return nil
}

type RanFunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionShortName   string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=ranFunctionShortName,proto3" json:"ran_function_short_name"`
	RanFunctionE2SmOid     string `protobuf:"bytes,2,opt,name=ran_function_e2sm_oid,json=ranFunctionE2smOid,proto3" json:"ran_function_e2sm_oid"`
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=ranFunctionDescription,proto3" json:"ran_function_description"`
	// Types that are assignable to OptionalRanFunctionInstance:
	//	*RanFunctionName_RanFunctionInstance
	OptionalRanFunctionInstance isRanFunctionName_OptionalRanFunctionInstance `protobuf_oneof:"optional_ran_function_instance"`
}

func (x *RanFunctionName) Reset() {
	*x = RanFunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanFunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanFunctionName) ProtoMessage() {}

func (x *RanFunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanFunctionName.ProtoReflect.Descriptor instead.
func (*RanFunctionName) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{3}
}

func (x *RanFunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanFunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanFunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (m *RanFunctionName) GetOptionalRanFunctionInstance() isRanFunctionName_OptionalRanFunctionInstance {
	if m != nil {
		return m.OptionalRanFunctionInstance
	}
	return nil
}

func (x *RanFunctionName) GetRanFunctionInstance() uint32 {
	if x, ok := x.GetOptionalRanFunctionInstance().(*RanFunctionName_RanFunctionInstance); ok {
		return x.RanFunctionInstance
	}
	return 0
}

type isRanFunctionName_OptionalRanFunctionInstance interface {
	isRanFunctionName_OptionalRanFunctionInstance()
}

type RanFunctionName_RanFunctionInstance struct {
	RanFunctionInstance uint32 `protobuf:"varint,4,opt,name=ran_function_instance,json=ranFunctionInstance,proto3,oneof"`
}

func (*RanFunctionName_RanFunctionInstance) isRanFunctionName_OptionalRanFunctionInstance() {}

type RicEventTriggerStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerStyleType  uint32 `protobuf:"varint,1,opt,name=ric_event_trigger_style_type,json=ricEventTriggerStyleType,proto3" json:"ric_event_trigger_style_type"`
	RicEventTriggerStyleName  string `protobuf:"bytes,2,opt,name=ric_event_trigger_style_name,json=ricEventTriggerStyleName,proto3" json:"ric_event_trigger_style_name"`
	RicEventTriggerFormatType uint32 `protobuf:"varint,3,opt,name=ric_event_trigger_format_type,json=ricEventTriggerFormatType,proto3" json:"ric_event_trigger_format_type"`
}

func (x *RicEventTriggerStyle) Reset() {
	*x = RicEventTriggerStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicEventTriggerStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicEventTriggerStyle) ProtoMessage() {}

func (x *RicEventTriggerStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicEventTriggerStyle.ProtoReflect.Descriptor instead.
func (*RicEventTriggerStyle) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{4}
}

func (x *RicEventTriggerStyle) GetRicEventTriggerStyleType() uint32 {
	if x != nil {
		return x.RicEventTriggerStyleType
	}
	return 0
}

func (x *RicEventTriggerStyle) GetRicEventTriggerStyleName() string {
	if x != nil {
		return x.RicEventTriggerStyleName
	}
	return ""
}

func (x *RicEventTriggerStyle) GetRicEventTriggerFormatType() uint32 {
	if x != nil {
		return x.RicEventTriggerFormatType
	}
	return 0
}

type RanParameterDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanParameterId   uint32           `protobuf:"varint,1,opt,name=ran_parameter_id,json=ranParameterId,proto3" json:"ran_parameter_id"`
	RanParameterName string           `protobuf:"bytes,2,opt,name=ran_parameter_name,json=ranParameterName,proto3" json:"ran_parameter_name"`
	RanParameterType RanParameterType `protobuf:"varint,3,opt,name=ran_parameter_type,json=ranParameterType,proto3,enum=entities.RanParameterType" json:"ran_parameter_type,omitempty"`
}

func (x *RanParameterDef) Reset() {
	*x = RanParameterDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanParameterDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanParameterDef) ProtoMessage() {}

func (x *RanParameterDef) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanParameterDef.ProtoReflect.Descriptor instead.
func (*RanParameterDef) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{5}
}

func (x *RanParameterDef) GetRanParameterId() uint32 {
	if x != nil {
		return x.RanParameterId
	}
	return 0
}

func (x *RanParameterDef) GetRanParameterName() string {
	if x != nil {
		return x.RanParameterName
	}
	return ""
}

func (x *RanParameterDef) GetRanParameterType() RanParameterType {
	if x != nil {
		return x.RanParameterType
	}
	return RanParameterType_UNKNOWN_RAN_PARAMETER_TYPE
}

type RicReportStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicReportStyleType             uint32             `protobuf:"varint,1,opt,name=ric_report_style_type,json=ricReportStyleType,proto3" json:"ric_report_style_type"`
	RicReportStyleName             string             `protobuf:"bytes,2,opt,name=ric_report_style_name,json=ricReportStyleName,proto3" json:"ric_report_style_name"`
	RicReportActionFormatType      uint32             `protobuf:"varint,3,opt,name=ric_report_action_format_type,json=ricReportActionFormatType,proto3" json:"ric_report_action_format_type"`
	RicReportRanParameterDefs      []*RanParameterDef `protobuf:"bytes,4,rep,name=ric_report_ran_parameter_defs,json=ricReportRanParameterDefs,proto3" json:"ric_report_ran_parameter_defs,omitempty"`
	RicIndicationHeaderFormatType  uint32             `protobuf:"varint,5,opt,name=ric_indication_header_format_type,json=ricIndicationHeaderFormatType,proto3" json:"ric_indication_header_format_type"`
	RicIndicationMessageFormatType uint32             `protobuf:"varint,6,opt,name=ric_indication_message_format_type,json=ricIndicationMessageFormatType,proto3" json:"ric_indication_message_format_type"`
}

func (x *RicReportStyle) Reset() {
	*x = RicReportStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicReportStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicReportStyle) ProtoMessage() {}

func (x *RicReportStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicReportStyle.ProtoReflect.Descriptor instead.
func (*RicReportStyle) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{6}
}

func (x *RicReportStyle) GetRicReportStyleType() uint32 {
	if x != nil {
		return x.RicReportStyleType
	}
	return 0
}

func (x *RicReportStyle) GetRicReportStyleName() string {
	if x != nil {
		return x.RicReportStyleName
	}
	return ""
}

func (x *RicReportStyle) GetRicReportActionFormatType() uint32 {
	if x != nil {
		return x.RicReportActionFormatType
	}
	return 0
}

func (x *RicReportStyle) GetRicReportRanParameterDefs() []*RanParameterDef {
	if x != nil {
		return x.RicReportRanParameterDefs
	}
	return nil
}

func (x *RicReportStyle) GetRicIndicationHeaderFormatType() uint32 {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return 0
}

func (x *RicReportStyle) GetRicIndicationMessageFormatType() uint32 {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return 0
}

type RicInsertStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicInsertStyleType             uint32             `protobuf:"varint,1,opt,name=ric_insert_style_type,json=ricInsertStyleType,proto3" json:"ric_insert_style_type"`
	RicInsertStyleName             string             `protobuf:"bytes,2,opt,name=ric_insert_style_name,json=ricInsertStyleName,proto3" json:"ric_insert_style_name"`
	RicInsertActionFormatType      uint32             `protobuf:"varint,3,opt,name=ric_insert_action_format_type,json=ricInsertActionFormatType,proto3" json:"ric_insert_action_format_type"`
	RicInsertRanParameterDefs      []*RanParameterDef `protobuf:"bytes,4,rep,name=ric_insert_ran_parameter_defs,json=ricInsertRanParameterDefs,proto3" json:"ric_insert_ran_parameter_defs,omitempty"`
	RicIndicationHeaderFormatType  uint32             `protobuf:"varint,5,opt,name=ric_indication_header_format_type,json=ricIndicationHeaderFormatType,proto3" json:"ric_indication_header_format_type"`
	RicIndicationMessageFormatType uint32             `protobuf:"varint,6,opt,name=ric_indication_message_format_type,json=ricIndicationMessageFormatType,proto3" json:"ric_indication_message_format_type"`
	RicCallProcessIdFormatType     uint32             `protobuf:"varint,7,opt,name=ric_call_process_id_format_type,json=ricCallProcessIdFormatType,proto3" json:"ric_call_process_id_format_type"`
}

func (x *RicInsertStyle) Reset() {
	*x = RicInsertStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicInsertStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicInsertStyle) ProtoMessage() {}

func (x *RicInsertStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicInsertStyle.ProtoReflect.Descriptor instead.
func (*RicInsertStyle) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{7}
}

func (x *RicInsertStyle) GetRicInsertStyleType() uint32 {
	if x != nil {
		return x.RicInsertStyleType
	}
	return 0
}

func (x *RicInsertStyle) GetRicInsertStyleName() string {
	if x != nil {
		return x.RicInsertStyleName
	}
	return ""
}

func (x *RicInsertStyle) GetRicInsertActionFormatType() uint32 {
	if x != nil {
		return x.RicInsertActionFormatType
	}
	return 0
}

func (x *RicInsertStyle) GetRicInsertRanParameterDefs() []*RanParameterDef {
	if x != nil {
		return x.RicInsertRanParameterDefs
	}
	return nil
}

func (x *RicInsertStyle) GetRicIndicationHeaderFormatType() uint32 {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return 0
}

func (x *RicInsertStyle) GetRicIndicationMessageFormatType() uint32 {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return 0
}

func (x *RicInsertStyle) GetRicCallProcessIdFormatType() uint32 {
	if x != nil {
		return x.RicCallProcessIdFormatType
	}
	return 0
}

type RicControlStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicControlStyleType         uint32 `protobuf:"varint,1,opt,name=ric_control_style_type,json=ricControlStyleType,proto3" json:"ric_control_style_type"`
	RicControlStyleName         string `protobuf:"bytes,2,opt,name=ric_control_style_name,json=ricControlStyleName,proto3" json:"ric_control_style_name"`
	RicControlHeaderFormatType  uint32 `protobuf:"varint,3,opt,name=ric_control_header_format_type,json=ricControlHeaderFormatType,proto3" json:"ric_control_header_format_type"`
	RicControlMessageFormatType uint32 `protobuf:"varint,4,opt,name=ric_control_message_format_type,json=ricControlMessageFormatType,proto3" json:"ric_control_message_format_type"`
	RicCallProcessIdFormatType  uint32 `protobuf:"varint,5,opt,name=ric_call_process_id_format_type,json=ricCallProcessIdFormatType,proto3" json:"ric_call_process_id_format_type"`
}

func (x *RicControlStyle) Reset() {
	*x = RicControlStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicControlStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicControlStyle) ProtoMessage() {}

func (x *RicControlStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicControlStyle.ProtoReflect.Descriptor instead.
func (*RicControlStyle) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{8}
}

func (x *RicControlStyle) GetRicControlStyleType() uint32 {
	if x != nil {
		return x.RicControlStyleType
	}
	return 0
}

func (x *RicControlStyle) GetRicControlStyleName() string {
	if x != nil {
		return x.RicControlStyleName
	}
	return ""
}

func (x *RicControlStyle) GetRicControlHeaderFormatType() uint32 {
	if x != nil {
		return x.RicControlHeaderFormatType
	}
	return 0
}

func (x *RicControlStyle) GetRicControlMessageFormatType() uint32 {
	if x != nil {
		return x.RicControlMessageFormatType
	}
	return 0
}

func (x *RicControlStyle) GetRicCallProcessIdFormatType() uint32 {
	if x != nil {
		return x.RicCallProcessIdFormatType
	}
	return 0
}

type RicPolicyStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicPolicyStyleType        uint32             `protobuf:"varint,1,opt,name=ric_policy_style_type,json=ricPolicyStyleType,proto3" json:"ric_policy_style_type"`
	RicPolicyStyleName        string             `protobuf:"bytes,2,opt,name=ric_policy_style_name,json=ricPolicyStyleName,proto3" json:"ric_policy_style_name"`
	RicPolicyActionFormatType uint32             `protobuf:"varint,3,opt,name=ric_policy_action_format_type,json=ricPolicyActionFormatType,proto3" json:"ric_policy_action_format_type"`
	RicPolicyRanParameterDefs []*RanParameterDef `protobuf:"bytes,4,rep,name=ric_policy_ran_parameter_defs,json=ricPolicyRanParameterDefs,proto3" json:"ric_policy_ran_parameter_defs,omitempty"`
}

func (x *RicPolicyStyle) Reset() {
	*x = RicPolicyStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ran_function_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicPolicyStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicPolicyStyle) ProtoMessage() {}

func (x *RicPolicyStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ran_function_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicPolicyStyle.ProtoReflect.Descriptor instead.
func (*RicPolicyStyle) Descriptor() ([]byte, []int) {
	return file_ran_function_proto_rawDescGZIP(), []int{9}
}

func (x *RicPolicyStyle) GetRicPolicyStyleType() uint32 {
	if x != nil {
		return x.RicPolicyStyleType
	}
	return 0
}

func (x *RicPolicyStyle) GetRicPolicyStyleName() string {
	if x != nil {
		return x.RicPolicyStyleName
	}
	return ""
}

func (x *RicPolicyStyle) GetRicPolicyActionFormatType() uint32 {
	if x != nil {
		return x.RicPolicyActionFormatType
	}
	return 0
}

func (x *RicPolicyStyle) GetRicPolicyRanParameterDefs() []*RanParameterDef {
	if x != nil {
		return x.RicPolicyRanParameterDefs
	}
	return nil
}

var File_ran_function_proto protoreflect.FileDescriptor

var file_ran_function_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc2,
	0x01, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x78, 0x0a,
	0x24, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x67, 0x6e, 0x62, 0x5f, 0x6e, 0x72, 0x74, 0x5f, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x32, 0x73, 0x6d, 0x47, 0x6e, 0x62, 0x4e, 0x72,
	0x74, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1f, 0x65, 0x32, 0x73, 0x6d, 0x47, 0x6e, 0x62, 0x4e,
	0x72, 0x74, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x03, 0x0a, 0x1f, 0x45, 0x32, 0x73, 0x6d,
	0x47, 0x6e, 0x62, 0x4e, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x11, 0x72,
	0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x52, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x57, 0x0a, 0x18, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x15, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x72,
	0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x0f, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x12, 0x44, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52,
	0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x10,
	0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73,
	0x12, 0x44, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0f, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x61, 0x6e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x32, 0x73,
	0x6d, 0x4f, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x13, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x42, 0x20, 0x0a, 0x1e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xd8, 0x01, 0x0a, 0x14, 0x52, 0x69, 0x63, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12,
	0x3e, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3e, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x61, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x12, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xab, 0x03, 0x0a, 0x0e, 0x52, 0x69, 0x63, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x69,
	0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a,
	0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x5b, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x66, 0x52, 0x19, 0x72, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x73, 0x12,
	0x48, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x72, 0x69, 0x63, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x72, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1e, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf0, 0x03, 0x0a, 0x0e, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f,
	0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x72,
	0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x69, 0x63, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x5b, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x52, 0x19, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x61, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x73, 0x12, 0x48, 0x0a,
	0x21, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1e, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x1f, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x72, 0x69,
	0x63, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x0f, 0x52, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16,
	0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x33, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a,
	0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x72, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1b, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x43, 0x0a, 0x1f, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x72, 0x69, 0x63, 0x43, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x0e, 0x52, 0x69, 0x63, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x72,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x69, 0x63, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x5b, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x72,
	0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x52, 0x19, 0x72, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x61, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x73, 0x2a, 0x94, 0x01,
	0x0a, 0x10, 0x52, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x41,
	0x4e, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x42, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c,
	0x4f, 0x43, 0x54, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x06, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ran_function_proto_rawDescOnce sync.Once
	file_ran_function_proto_rawDescData = file_ran_function_proto_rawDesc
)

func file_ran_function_proto_rawDescGZIP() []byte {
	file_ran_function_proto_rawDescOnce.Do(func() {
		file_ran_function_proto_rawDescData = protoimpl.X.CompressGZIP(file_ran_function_proto_rawDescData)
	})
	return file_ran_function_proto_rawDescData
}

var file_ran_function_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ran_function_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ran_function_proto_goTypes = []interface{}{
	(RanParameterType)(0),                   // 0: entities.RanParameterType
	(*RanFunction)(nil),                     // 1: entities.RanFunction
	(*RanFunctionDefinition)(nil),           // 2: entities.RanFunctionDefinition
	(*E2SmGnbNrtRanFunctionDefinition)(nil), // 3: entities.E2smGnbNrtRanFunctionDefinition
	(*RanFunctionName)(nil),                 // 4: entities.RanFunctionName
	(*RicEventTriggerStyle)(nil),            // 5: entities.RicEventTriggerStyle
	(*RanParameterDef)(nil),                 // 6: entities.RanParameterDef
	(*RicReportStyle)(nil),                  // 7: entities.RicReportStyle
	(*RicInsertStyle)(nil),                  // 8: entities.RicInsertStyle
	(*RicControlStyle)(nil),                 // 9: entities.RicControlStyle
	(*RicPolicyStyle)(nil),                  // 10: entities.RicPolicyStyle
}
var file_ran_function_proto_depIdxs = []int32{
	2,  // 0: entities.RanFunction.ran_function_definition:type_name -> entities.RanFunctionDefinition
	3,  // 1: entities.RanFunctionDefinition.e2sm_gnb_nrt_ran_function_definition:type_name -> entities.E2smGnbNrtRanFunctionDefinition
	4,  // 2: entities.E2smGnbNrtRanFunctionDefinition.ran_function_name:type_name -> entities.RanFunctionName
	5,  // 3: entities.E2smGnbNrtRanFunctionDefinition.ric_event_trigger_styles:type_name -> entities.RicEventTriggerStyle
	7,  // 4: entities.E2smGnbNrtRanFunctionDefinition.ric_report_styles:type_name -> entities.RicReportStyle
	8,  // 5: entities.E2smGnbNrtRanFunctionDefinition.ric_insert_styles:type_name -> entities.RicInsertStyle
	9,  // 6: entities.E2smGnbNrtRanFunctionDefinition.ric_control_styles:type_name -> entities.RicControlStyle
	10, // 7: entities.E2smGnbNrtRanFunctionDefinition.ric_policy_styles:type_name -> entities.RicPolicyStyle
	0,  // 8: entities.RanParameterDef.ran_parameter_type:type_name -> entities.RanParameterType
	6,  // 9: entities.RicReportStyle.ric_report_ran_parameter_defs:type_name -> entities.RanParameterDef
	6,  // 10: entities.RicInsertStyle.ric_insert_ran_parameter_defs:type_name -> entities.RanParameterDef
	6,  // 11: entities.RicPolicyStyle.ric_policy_ran_parameter_defs:type_name -> entities.RanParameterDef
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_ran_function_proto_init() }
func file_ran_function_proto_init() {
	if File_ran_function_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ran_function_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanFunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmGnbNrtRanFunctionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanFunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicEventTriggerStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanParameterDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicReportStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicInsertStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicControlStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ran_function_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicPolicyStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ran_function_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RanFunctionName_RanFunctionInstance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ran_function_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ran_function_proto_goTypes,
		DependencyIndexes: file_ran_function_proto_depIdxs,
		EnumInfos:         file_ran_function_proto_enumTypes,
		MessageInfos:      file_ran_function_proto_msgTypes,
	}.Build()
	File_ran_function_proto = out.File
	file_ran_function_proto_rawDesc = nil
	file_ran_function_proto_goTypes = nil
	file_ran_function_proto_depIdxs = nil
}
